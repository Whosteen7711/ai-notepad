// endpoint: /api/create-notebook

import { db } from '@/lib/db'
import { notes } from '@/lib/db/schema'
import { generateImage, generatePrompt } from '@/lib/open-ai'
import { auth } from '@clerk/nextjs'
import { NextResponse } from 'next/server'

export const POST = async (req: Request) => {
  // check that user is authenticated
  const { userId } = auth()
  if (!userId) {
    return new NextResponse('Unauthorized', { status: 401 })
  }

  // parse the request body into a JSON object
  const body = await req.json()

  // request triggers a new notebook creation, destructure the request body for the notebook name
  const { name } = body

  // build image prompt for DALL-E model
  const prompt = await generatePrompt(name)
  // handle potential errors from building the prompt
  if (!prompt) {
    return new NextResponse('Failed to generate prompt', { status: 500 })
  }

  // store the image url generated by DALL-E model
  const imageUrl = await generateImage(prompt)
  // handle potential errors from generating the image
  if (!imageUrl) {
    return new NextResponse('Failed to generate image', { status: 500 })
  }

  // log the prompt and image url to the console
  console.log('prompt: ', prompt)
  console.log('image url: ', imageUrl)

  // add note entry to db
  const noteIds = await db
    .insert(notes)
    .values({
      title: name,
      username: userId,
      imageUrl: imageUrl,
    })
    .returning({ insertedId: notes.id })

  return NextResponse.json({ noteId: noteIds[0].insertedId })
}
